<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="hr">
	
	<!-- 신규사원 등록 -->
	<insert id="insert">
		insert into employees (employee_id, first_name, last_name, email
			, phone_number, department_id, job_id, salary, hire_date)
		values(employees_seq.nextval, #{first_name}, #{last_name}
			, #{email}, #{phone_number}, 
			<if test='department_id == -1'> null </if>
			<if test='department_id != -1'> #{department_id} </if>
			, #{job_id}, #{salary}, #{hire_date})
	</insert>
	
	<!-- 사원정보 변경 -->
	<update id="update">
		update employees SET
		first_name = #{first_name}, last_name = #{last_name},
		email = #{email}, phone_number = #{phone_number},
		salary = #{salary}, hire_date = #{hire_date}, job_id = #{job_id},
		department_id = 
		<if test='department_id == -1'>null</if>
		<if test='department_id != -1'>#{department_id}</if>
		where employee_id = #{employee_id}
	</update>
	
	<!-- 전체 부서목록 조회 -->
	<select id="dept_list" resultType='hr.DeptVO'>
		select * from departments order by department_name
	</select>
	
	<!-- 전체 업무목록 조회 -->
	<select id="jobs_list" resultType='hr.JobVO'>
		select * from jobs order by job_title
	</select>
	
	<!-- 사원정보 삭제 -->
	<delete id="delete">
		delete from employees where employee_id = #{employee_id}
	</delete>
	
	<!-- 사원정보 조회 -->
	<select id="info" resultType='hr.EmpVO'>
		select e.*, first_name||' '||last_name name,
		department_name, job_title
		from employees e LEFT OUTER JOIN departments d
		on e.department_id = d.department_id
		INNER JOIN jobs j
		on j.job_id = e.job_id
		where employee_id = #{employee_id} 
	</select>
	
	<!-- 사원목록 조회 -->
	<select id="list" resultType="hr.EmpVO">
		select e.*, department_name
		from employees e LEFT OUTER JOIN departments d
		on e.department_id = d.department_id 
		order by e.employee_id
	</select>
	
</mapper>